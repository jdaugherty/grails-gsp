import grails.doc.gradle.PublishGuide

buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath platform("org.grails:grails-bom:$grailsVersion")
        classpath "org.grails:grails-docs"
    }
}

version rootProject.version

apply plugin: 'groovy'

//TODO: PublishGuide should eventually ensure the build directory exists
tasks.register('docsBuild') {
    doFirst {
        project.layout.buildDirectory.get().asFile.mkdirs()
    }

    // Do not cache this task since the directory must exist if publishGuide is going to run
    outputs.upToDateWhen { false }
}

tasks.register('publishGuide', PublishGuide) {
    dependsOn 'docsBuild'

    group = JavaBasePlugin.DOCUMENTATION_GROUP
    description = 'Generate Guide'

    targetDir = project.layout.buildDirectory.dir('docs').get().asFile
    outputs.dir(targetDir) // ensure gradle understands what this task generates
    sourceRepo = "https://github.com/grails/grails-gsp/edit/${githubBranch}/src/main/docs"
    sourceDir = project.layout.projectDirectory.dir('src/main/docs').getAsFile()
    inputs.dir(sourceDir) // ensure gradle understands what this task creates from
    propertiesFiles = [rootProject.layout.projectDirectory.file('gradle.properties').asFile]
    asciidoc = true
    resourcesDir = project.file('src/main/docs/resources')
    properties = [
            'safe'          : 'UNSAFE', // Make sure any asciidoc security is disabled
            'version'       : project.version,
            'title'         : 'Groovy Server Pages (GSP)',
            'subtitle'      : 'GSP (Groovy Server Pages) - A server-side view rendering technology based on Groovy',
            // TODO: The javaee documentation has not been updated to jakarata
            'javaee'        : 'https://docs.oracle.com/javaee/7/api/',
            'jakartaee'     : 'https://jakarta.ee/specifications/platform/10/apidocs/',
            'javase'        : 'https://docs.oracle.com/en/java/javase/17/docs/api/index.html',
            'groovyapi'     : "https://docs.groovy-lang.org/$groovyVersion/html/gapi/",
            'groovyjdk' : "https://docs.groovy-lang.org/$groovyVersion/html/groovy-jdk/",
            'grailsapi'     : "https://docs.grails.org/$grailsVersion/api/",
            'grailsdocs' : "https://docs.grails.org/$grailsVersion/",
            'gormapi'       : 'http://gorm.grails.org/latest/api/',
            'springapi'     : 'https://docs.spring.io/spring/docs/current/javadoc-api/',
            'commandLineRef': "https://docs.grails.org/$grailsVersion/ref/Command%20Line",
            'controllersRef': "https://docs.grails.org/$grailsVersion/ref/Controllers"
    ] as Properties

    doLast {
        File destination = project.layout.buildDirectory.file("docs/guide/index.html").get().asFile
        destination.delete()

        project.layout.buildDirectory.file('docs/guide/single.html').get().asFile.renameTo(destination)
        project.layout.buildDirectory.file('docs/index.html').get().asFile.text = '''
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
<meta http-equiv="refresh" content="0; url=guide/index.html" />
</head>

</body>
</html>
'''
    }
}