name: "Release"
on:
  release:
    types: [published]
env:
  GIT_USER_NAME: 'grails-build'
  GIT_USER_EMAIL: 'grails-build@users.noreply.github.com'
jobs:
  publish:
    outputs:
      release_version: ${{ steps.release_version.outputs.value }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: "☕️ Setup JDK"
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '17'
      - name: "📝 Store the current release version"
        id: release_version
        run: echo "value=${GITHUB_REF:11}" >> $GITHUB_OUTPUT
      - name: "🐘 Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ secrets.DEVELOCITY_ACCESS_KEY }}
      - name: "⚙ Run pre-release"
        uses: micronaut-projects/github-actions/pre-release@master
      - name: "🧩 Run Assemble"
        if: success()
        run: ./gradlew assemble
        env:
          SITEMESH_MAVEN_PASSWORD: ${{ secrets.GH_TOKEN }}
          CHECK_SITEMESH_REPO: true
      - name: "📤 Upload Distribution"
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: grails-gsp-${{ steps.release_version.outputs.value }}.zip
          path: ./**/build/libs/*
      - name: "🔐 Generate key file for artifact signing"
        env:
          SECRING_FILE: ${{ secrets.SECRING_FILE }}
        run: echo $SECRING_FILE | base64 -d > ${{ github.workspace }}/secring.gpg
      - name: "📤 Publish to and close Sonatype staging repository"
        id: publish
        env:
          SITEMESH_MAVEN_PASSWORD: ${{ secrets.GH_TOKEN }}
          CHECK_SITEMESH_REPO: true
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
          SECRING_FILE: ${{ secrets.SECRING_FILE }}
        run: >
          ./gradlew
          -Psigning.secretKeyRingFile=${{ github.workspace }}/secring.gpg 
          publishToSonatype 
          closeSonatypeStagingRepository
  release:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: "📥 Checkout repository"
        uses: actions/checkout@v4
        with:
          ref: v${{ needs.publish.outputs.release_version }}
      - name: "☕️ Setup JDK"
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '17'
      - name: "🐘 Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ secrets.DEVELOCITY_ACCESS_KEY }}
      - name: "🚀 Release Sonatype Staging Repository"
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
        run: >
          ./gradlew
          findSonatypeStagingRepository
          releaseSonatypeStagingRepository
      - name: "⚙️ Run post-release"
        if: success()
        uses: micronaut-projects/github-actions/post-release@master
  docs:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: "📥 Checkout repository"
        uses: actions/checkout@v4
        with:
          ref: v${{ needs.publish.outputs.release_version }}
      - name: "☕️ Setup JDK"
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '17'
      - name: "🐘 Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ secrets.DEVELOCITY_ACCESS_KEY }}
      - name: "📖 Generate documentation"
        run: ./gradlew docs
      - name: "📤 Publish documentation to Github Pages"
        if: success()
        uses: micronaut-projects/github-pages-deploy-action@grails
        env:
          BETA: ${{ contains(needs.publish.outputs.release_version, 'M') || contains(needs.publish.outputs.release_version, 'RC') }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: build/docs
          VERSION: ${{ needs.publish.outputs.release_version }}
          COMMIT_EMAIL: ${{ env.GIT_USER_EMAIL }}
          COMMIT_NAME: ${{ env.GIT_USER_NAME }}