buildscript {
    repositories {
        maven { url = 'https://repo.grails.org/grails/core' }
    }
    dependencies {
        classpath platform("org.grails:grails-bom:$grailsVersion")
        classpath 'org.grails:grails-gradle-plugin'
    }
}

version = projectVersion
group = 'org.grails.plugins'

apply plugin: 'groovy'
apply plugin: 'java-library'
apply plugin: 'org.grails.grails-plugin'

ext {
    testMaxParallelFork = isCiBuild ? 1 : 4
    testForkEvery = isCiBuild ? 10 : 20
    testJvmArgs = ['-Xmx1536M']
}

dependencies {

    implementation platform("org.grails:grails-bom:$grailsVersion")

    api project(':grails-gsp'), { // GroovyPageResourceLoader, GroovyPagesTemplateEngine, CachingGroovyPageStaticResourceLocator
/*
        // API dependencies in grails-gsp
        exclude group: 'org.grails', module: 'grails-bootstrap'
        //exclude group: 'org.apache.groovy', module: 'groovy-templates' // TemplateEngine
*/
    }
    api project(':grails-web-gsp'), { // PageRenderer
/*
        // API dependencies in grails-web-gsp
        exclude group: 'org.grails', module: 'grails-gsp'
        exclude group: 'org.grails', module: 'grails-web-common'
        exclude group: 'org.grails', module: 'grails-web-taglib'
*/
    }
    api project(':grails-web-taglib'), { // TagLibraryInvoker, TagLib, TagLibrary
/*
        // API dependencies in grails-web-taglib
        exclude group: 'org.grails', module: 'grails-taglib'
        exclude group: 'org.grails', module: 'grails-web-common'
*/
    }
    api 'org.grails:grails-encoder', { // CodecLookup, Encoder
/*
        // API dependencies in grails-encoder
        exclude group: 'org.apache.groovy', module: 'groovy'
        exclude group: 'org.apache.groovy', module: 'groovy-json'
        exclude group: 'org.grails', module: 'grails-core'
        exclude group: 'org.slf4j', module: 'jcl-over-slf4j'
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'org.springframework', module: 'spring-web'
*/
    }
    api 'org.grails:grails-web-url-mappings', { // LinkGenerator
/*
        // API dependencies in grails-web-url-mappings
        exclude group: 'org.grails', module: 'grails-web-common'
        //exclude group: 'org.grails', module: 'grails-datastore-gorm-validation' // Constrained
*/
    }
    api 'org.springframework:spring-context' // MessageSource, Errors, MessageSourceResolvable, DefaultMessageSourceResolvable, NoSuchMessageException
    api 'org.springframework.boot:spring-boot' // ServletRegistrationBean

    implementation project(':grails-taglib'), { // GroovyPageAttributes
/*
        // API dependencies in grails-taglib
        exclude group: 'org.grails', module: 'grails-core'
        exclude group: 'org.grails', module: 'grails-encoder'
        exclude group: 'org.springframework', module: 'spring-core'
*/
    }
    implementation project(':grails-web-gsp-taglib'), { // RenderTagLib
/*
        // API dependencies in grails-web-gsp-taglib
        exclude group: 'org.grails', module: 'grails-taglib'
        exclude group: 'org.grails', module: 'grails-web-gsp'
*/
    }
    implementation "org.apache.commons:commons-text:$commonsTextVersion" // StringEscapeUtils
    implementation 'org.apache.groovy:groovy-xml' // MarkupBuilder
    implementation 'org.grails:grails-core', { // Config
/*
        // API dependencies in grails-core
        exclude group: 'org.apache.groovy', module: 'groovy'
        exclude group: 'jakarta.inject', module: 'jakarta.inject-api'
        exclude group: 'jakarta.persistence', module: 'jakarta.persistence-api'
        exclude group: 'jakarta.annotation', module: 'jakarta.annotation-api'
        exclude group: 'org.grails', module: 'grails-bootstrap'
        exclude group: 'org.grails', module: 'grails-datastore-core'
        exclude group: 'org.grails', module: 'grails-spring'
        exclude group: 'org.slf4j', module: 'jcl-over-slf4j'
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'org.yaml', module: 'snakeyaml'
        exclude group: 'org.springframework', module: 'spring-beans'
        exclude group: 'org.springframework', module: 'spring-core'
        exclude group: 'org.springframework', module: 'spring-context'
        exclude group: 'org.springframework', module: 'spring-tx'
        exclude group: 'org.springframework.boot', module: 'spring-boot'
        exclude group: 'org.springframework.boot', module: 'spring-boot-autoconfigure'
*/
    }
    implementation 'org.grails:grails-spring', { // RuntimeSpringConfiguration
/*
        // API dependencies in grails-spring
        exclude group: 'org.springframework', module: 'spring-tx'
        exclude group: 'org.springframework', module: 'spring-web'
        exclude group: 'org.springframework', module: 'spring-context'
        exclude group: 'org.grails', module: 'grails-bootstrap'
        exclude group: 'org.apache.groovy', module: 'groovy-xml'
*/
    }
    implementation 'org.grails:grails-web-common', {
/*
        // API dependencies in grails-web-common
        exclude group: 'org.apache.groovy', module: 'groovy-templates'
        exclude group: 'org.grails', module: 'grails-core'
        exclude group: 'org.grails', module: 'grails-databinding'
        exclude group: 'org.grails', module: 'grails-encoder'
        exclude group: 'org.springframework', module: 'spring-webmvc'
        exclude group: 'org.springframework', module: 'spring-context-support'
*/
    }
    implementation 'org.grails:grails-web-mvc', { // SynchronizerTokensHolder
/*
        // API dependencies in grails-web-mvc
        exclude group: 'org.grails', module: 'grails-web-common'
        exclude group: 'org.grails', module: 'grails-web-url-mappings'
*/
    }
    implementation 'org.springframework:spring-beans' // PropertyEditorRegistry

    astImplementation 'org.grails:grails-web', {
/*
        // API dependencies in grails-web
        exclude group: 'org.grails', module: 'grails-web-common'
        exclude group: 'org.grails', module: 'grails-web-databinding'
        exclude group: 'org.grails', module: 'grails-web-gsp'
        exclude group: 'org.grails', module: 'grails-web-mvc'
        exclude group: 'org.grails', module: 'grails-web-url-mappings'
*/
    }
    astImplementation 'org.grails:grails-plugin-controllers', {
/*
        // API dependencies in grails-plugin-controllers
        //exclude group: 'org.grails', module: 'grails-core' // TraitInjector
        exclude group: 'org.grails', module: 'grails-web'
        exclude group: 'org.grails', module: 'grails-plugin-mimetypes'
        exclude group: 'org.grails', module: 'grails-plugin-validation'
        exclude group: 'org.grails', module: 'grails-plugin-domain-class'
        exclude group: 'org.springframework.boot', module: 'spring-boot-autoconfigure'
*/
    }

    compileOnly project(':grails-web-jsp'), { // Provided by Application for JSP support
/*
        // API dependencies in grails-web-jsp
        exclude group: 'org.grails', module: 'grails-web-gsp'
*/
    }

    runtimeOnly "org.grails:grails-plugin-codecs:$grailsVersion" // Registers CodecLookup bean

    testCompileOnly 'jakarta.annotation:jakarta.annotation-api'

    testImplementation project(':grails-web-jsp'), { // TagLibraryResolverImpl
/*
        // API dependencies in grails-web-jsp
        exclude group: 'org.grails', module: 'grails-web-gsp'
*/
    }
    testImplementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
    testImplementation "jakarta.servlet.jsp:jakarta.servlet.jsp-api:$jspApiVersion"
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.springframework:spring-test'
    testImplementation 'org.spockframework:spock-core'
    testImplementation 'org.grails:grails-gorm-testing-support'
    testImplementation 'org.grails:grails-testing-support'
    testImplementation 'org.grails:grails-web-testing-support'

    testRuntimeOnly 'org.glassfish.web:jakarta.servlet.jsp.jstl'
    testRuntimeOnly 'org.grails:grails-plugin-url-mappings'
    testRuntimeOnly 'org.grails.plugins:async'
}

apply from: rootProject.layout.projectDirectory.file('gradle/java-config.gradle')
apply from: rootProject.layout.projectDirectory.file('gradle/test-config.gradle')
apply from: rootProject.layout.projectDirectory.file('gradle/publish-config.gradle')
